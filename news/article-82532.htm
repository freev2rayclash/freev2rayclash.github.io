<!doctype html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://freev2rayclash.github.io/news/article-82532.htm" />
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>vuex配置项、多组件数据共享案例详解</title>
        <meta name="description" content="文章目录  getters 配置项 mapState、mapGetters mapActions、mapMutations 多组件共享数据    没有看过上一篇的同学可以查看：Vue Vuex学习(搭" />
        <link rel="icon" href="/assets/website/img/freev2rayclash/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Free V2ray Clash免费机场订阅节点官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://freev2rayclash.github.io/news/article-82532.htm" />
    <meta property="og:site_name" content="Free V2ray Clash免费机场订阅节点官网" />
    <meta property="og:title" content="vuex配置项、多组件数据共享案例详解" />
    <meta property="og:image" content="https://freev2rayclash.github.io/uploads/20240919-1/506593d007106bd61f53bf7f465c176a.webp" />
        <meta property="og:release_date" content="2025-03-27T08:14:40" />
    <meta property="og:updated_time" content="2025-03-27T08:14:40" />
        <meta property="og:description" content="文章目录  getters 配置项 mapState、mapGetters mapActions、mapMutations 多组件共享数据    没有看过上一篇的同学可以查看：Vue Vuex学习(搭" />
    
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="vuex配置项、多组件数据共享案例详解">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <link href="https://fonts.googleapis.com/css2?family=Barlow:ital,wght@0,300;0,600;0,700;1,400&display=swap" rel="stylesheet">
    <!-- Template CSS -->
    <link rel="stylesheet" href="/assets/website/css/freev2rayclash/style-starter.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-SMY6EV424E"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-SMY6EV424E');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!--header-->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg navbar-dark stroke">
                <a class="navbar-brand" href="/">
                                    <span>
                        Free V2ray Clash                    </span>
                                </a>
                <!-- if logo is image enable this   
      <a class="navbar-brand" href="#index.html">
          <img src="image-path" alt="Your logo" title="Your logo" style="height:35px;" />
      </a> -->
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                    </span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav mx-lg-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/free-nodes/">免费节点</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/client.htm">客户端</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/news/">新闻资讯</a>
                        </li>
                                            </ul>
                </div>
            </nav>
        </div>
    </header>
    <!--/header-->
    <div class="inner-banner">
    </div>
    <section class="w3l-breadcrumb">
        <div class="container">
            <ul class="breadcrumbs-custom-path">
                <li><a href="/">首页</a></li>
                <li><a href="/news/"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 新闻资讯</a></li>
                <li class="active"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> 正文</li>
            </ul>
        </div>
    </section>
    <!--/about-->
    <!--/w3l-faq-block-->
    <div class="w3l-faq-block py-5" id="faq">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                    <h1 class="mb-5">vuex配置项、多组件数据共享案例详解</h1>
                    
                                    <input type="hidden" id="share-website-info" data-name="Clash Meta免费节点订阅站" data-url="https://clash-meta.github.io">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <div class="toc"> <h3>文章目录</h3> <ul> <li><a href="#getters__2" rel="nofollow">getters 配置项</a></li> <li><a href="#mapStatemapGetters_46" rel="nofollow">mapState、mapGetters</a></li> <li><a href="#mapActionsmapMutations_124" rel="nofollow">mapActions、mapMutations</a></li> <li><a href="#_174" rel="nofollow">多组件共享数据</a></li> </ul> </div> <p> 没有看过上一篇的同学可以查看：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/u010356768/article/details/124136398"  rel="nofollow">Vue Vuex学习(搭建vuex环境、vuex求和案例)</a></p> </h1> <p><strong>index.js</strong> 中增加 getters 配置项</p> <pre><code class="prism language-js"><span class="token comment">//准备getters，用于将state中的数据进行加工</span><span class="token keyword">const</span> getters<span class="token operator">=</span><span class="token punctuation">{<!-- --></span><span class="token function">bigSum</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span> state<span class="token punctuation">.</span>sum<span class="token operator">*</span><span class="token number">10</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment">//创建并暴露store</span><span class="token keyword">export</span><span class="token keyword">default</span><span class="token keyword">new</span><span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">{<!-- --></span><span class="token operator">...</span><span class="token operator">...</span>     getters<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <p><strong>Count.vue</strong> 中使用</p> <pre><code class="prism language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>当前求和10倍为：{<!-- -->{$store.getters.bigSum}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span></code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220607/4903191c1d43bf651694443206693635.jpg" alt="vuex配置项、多组件数据共享案例详解"><br /><strong>总结</strong><br /> 1.概念：当 state 中的数据需要经过加工后再使用时，可以使用 getters 加工<br /> 2.在<code>store.js</code>中追加<code>getters</code> 配置</p> <pre><code class="prism language-js"><span class="token comment">//准备getters，用于将state中的数据进行加工</span><span class="token keyword">const</span> getters<span class="token operator">=</span><span class="token punctuation">{<!-- --></span><span class="token function">bigSum</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span> state<span class="token punctuation">.</span>sum<span class="token operator">*</span><span class="token number">10</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment">//创建并暴露store</span><span class="token keyword">export</span><span class="token keyword">default</span><span class="token keyword">new</span><span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">{<!-- --></span><span class="token operator">...</span><span class="token operator">...</span>     getters<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <p>3.组件中读取数据：<code>$store.getters.bigSum</code></p> </h1> <p>首先引入问题。我们在 index.js 中增加学校和学科字段</p> <pre><code class="prism language-js"><span class="token keyword">const</span> state<span class="token operator">=</span><span class="token punctuation">{<!-- --></span><span class="token literal-property property">sum</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token comment">//当前和</span><span class="token literal-property property">school</span><span class="token operator">:</span><span class="token string">"三里屯小学"</span><span class="token punctuation">,</span><span class="token literal-property property">subject</span><span class="token operator">:</span><span class="token string">"Vue"</span><span class="token punctuation">,</span><span class="token punctuation">}</span></code></pre> <p>Count.vue 中使用</p> <pre><code class="prism language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>当前求和为：{<!-- -->{$store.state.sum}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>当前求和10倍为：{<!-- -->{$store.getters.bigSum}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>我在：{<!-- -->{$store.state.school}}学习{<!-- -->{$store.state.subject}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span></code></pre> <p>查看下当前效果：<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220607/a8e3e5441375a2dbc196a9ff914dec94.jpg" alt="vuex配置项、多组件数据共享案例详解"><br /> 我们发现每次取值时都是<code>store.state.xxx</code>或者<code>$store.getters.xxx</code>，太长了，有的同学想到了写计算属性来简化</p> <pre><code class="prism language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>当前求和为：{<!-- -->{he}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>当前求和10倍为：{<!-- -->{$store.getters.bigSum}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>我在：{<!-- -->{xuexiao}}学习{<!-- -->{xueke}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>  computed:{     he(){       return this.$store.state.sum     },     xuexiao(){       return this.$store.state.school     },     xueke(){       return this.$store.state.subject     }   }</code></pre> <p>当然可以使用要学习的这个<code>mapState</code></p> <pre><code class="prism language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>当前求和为：{<!-- -->{he}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>当前求和10倍为：{<!-- -->{$store.getters.bigSum}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>我在：{<!-- -->{xuexiao}}学习{<!-- -->{xueke}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span> 	computed:{     	//借助mapstate生成计算属性，从state中读取数据（对象写法）     	...mapState({he:"sum",xuexiao:"school",xueke:"subject"})     	//或者     	//借助mapstate生成计算属性，从state中读取数据（数组写法）    		...mapState(['sum','school',"subject"])   	},</code></pre> <p>其中…这里是 ES6 的语法，举个例子</p> <pre><code class="prism language-js"><span class="token keyword">let</span> obj1<span class="token operator">=</span><span class="token punctuation">{<!-- --></span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">}</span><span class="token keyword">let</span> obj2<span class="token operator">=</span><span class="token punctuation">{<!-- --></span><span class="token literal-property property">a</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">...</span>obj1<span class="token punctuation">,</span><span class="token literal-property property">b</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">}</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj2<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220607/7bb05e93e5adf2c42ccda763b7632a09.jpg" alt="vuex配置项、多组件数据共享案例详解"><br /> 所以<code>...mapState({he:"sum",xuexiao:"school",xueke:"subject"})</code>就相当于我们在 computed 中增加了开始写的那一堆方法</p> <p>同样 mapGetters</p> <pre><code class="prism language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>当前求和10倍为：{<!-- -->{ bigSum }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>  computed: {    ......     //...mapGetters({bigSum:'bigSum'})     ...mapGetters(['bigSum'])   },</code></pre> </h1> <p>mapMutations 对象写法</p> <pre><code class="prism language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>increment(n)<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>+<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>decrement(n)<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>-<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>  	methods: {     /*increment() {       this.$store.commit("JIA", this.n);     },     decrement() {       this.$store.commit("JIAN", this.n);     },*/     ...mapMutations({"increment":"JIA","decrement":"JIAN"}),    ......   }</code></pre> <p>mapMutations 数组写法</p> <pre><code class="prism language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>JIA(n)<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>+<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>JIAN(n)<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>-<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>  	//借助 mapMutations 生成对用的方法，方法中会调用 commit去联系mutations(数组写法)     ...mapMutations(["JIA","JIAN"]),</code></pre> <p>数组的这种写法意思是生成方法名为 JIA，commit 的方法名也为 JIA 才能这样写，所以调用时，我们方法名要写 JIA，同样的也要把参数传进去<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220607/c9b1790a7b9c8d7d9c1ef414c2152e24.jpg" alt="vuex配置项、多组件数据共享案例详解"><br /> mapAtions 对象写法</p> <pre><code class="prism language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>incrementOdd(n)<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>当前和为奇数再加<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>incrementWait(n)<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>等一等再加<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>      methods:{ 	//借助 mapActions 生成对用的方法，方法中会调用 dispatch 去联系 actions(对象写法) 	...mapActions({incrementOdd:"jiaOdd",incrementWait:"jiaWait"}) }</code></pre> <p>mapAtions 数组写法</p> <pre><code class="prism language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jiaOdd(n)<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>当前和为奇数再加<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jiaWait(n)<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>等一等再加<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>     methods:{ 	//借助 mapActions 生成对用的方法，方法中会调用 dispatch 去联系 actions(数组写法)     ...mapActions(["jiaOdd","jiaWait"])     }</code></pre> </h1> <p>现在再写一个 Person 组件，展示人员信息。要完成 Person 组件展示刚才 Count 组件中的 sum 值。而 Count 组件展示人员信息</p> <p>我们首先完成 Person 组件的人员展示和添加。首先在 index.js 中的 state 中存入<code>personList</code> 做为要展示的人员数据。然后在 Person.vue 中使用<code>v-for</code> 循环出人员数据</p> <p>然后实现添加人员方法。正常应该在 index.js 中的 actions 写方法，然后 commit 给 mutations，但是因为逻辑比较简单，所以我们直接在 mutations 中写一个添加人员的方法<code>ADD_PERSON</code>，然后在 Person.vue 中使用<code>this.$store.commit</code>提交添加的人员数据即可。先看效果：<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220607/422ece0b29d05848f0f3b01c6a754932.jpg" alt="vuex配置项、多组件数据共享案例详解"></p> <p>完整代码如下(仅展示改动的代码)：</p> <p><strong>index.js</strong></p> <pre><code class="prism language-js"><span class="token operator">...</span><span class="token operator">...</span><span class="token comment">//准备mutations；用于操作数据（state）</span><span class="token keyword">const</span> mutations<span class="token operator">=</span><span class="token punctuation">{<!-- --></span><span class="token operator">...</span><span class="token operator">...</span><span class="token constant">ADD_PERSON</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span>value</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"mutations中的ADD_PERSON被调用了"</span><span class="token punctuation">,</span>state<span class="token punctuation">,</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>         state<span class="token punctuation">.</span>personList<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment">//准备state；用于存储数据</span><span class="token keyword">const</span> state<span class="token operator">=</span><span class="token punctuation">{<!-- --></span><span class="token operator">...</span><span class="token operator">...</span><span class="token literal-property property">personList</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">{<!-- --></span><span class="token literal-property property">id</span><span class="token operator">:</span><span class="token string">"001"</span><span class="token punctuation">,</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">"张三"</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{<!-- --></span><span class="token literal-property property">id</span><span class="token operator">:</span><span class="token string">"002"</span><span class="token punctuation">,</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">"李四"</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token operator">...</span><span class="token operator">...</span></code></pre> <p><strong>Person.vue</strong></p> <pre><code class="prism language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>category<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>人员信息<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span><span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span><span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入名字<span class="token punctuation">"</span></span><span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>add<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>添加<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>person in personList<span class="token punctuation">"</span></span><span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>person.id<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>{<!-- -->{person.name}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">import</span><span class="token punctuation">{<!-- --></span>nanoid<span class="token punctuation">}</span><span class="token keyword">from</span><span class="token string">"nanoid"</span><span class="token keyword">export</span><span class="token keyword">default</span><span class="token punctuation">{<!-- --></span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">"Person"</span><span class="token punctuation">,</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span><span class="token punctuation">{<!-- --></span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token literal-property property">methods</span><span class="token operator">:</span><span class="token punctuation">{<!-- --></span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">const</span> personObj<span class="token operator">=</span><span class="token punctuation">{<!-- --></span><span class="token literal-property property">id</span><span class="token operator">:</span><span class="token function">nanoid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">"ADD_PERSON"</span><span class="token punctuation">,</span>personObj<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token literal-property property">computed</span><span class="token operator">:</span><span class="token punctuation">{<!-- --></span><span class="token function">personList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span><span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>personList<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token attr-name">scoped</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"><span class="token selector">select, button</span><span class="token punctuation">{<!-- --></span><span class="token property">margin-right</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span></code></pre> <p>App.vue 中引入组件并使用</p> <pre><code class="prism language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Count</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Person</span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">import</span> Count<span class="token keyword">from</span><span class="token string">"@/components/Count"</span><span class="token punctuation">;</span><span class="token keyword">import</span> Person<span class="token keyword">from</span><span class="token string">"@/components/Person"</span><span class="token punctuation">;</span><span class="token keyword">export</span><span class="token keyword">default</span><span class="token punctuation">{<!-- --></span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'App'</span><span class="token punctuation">,</span><span class="token literal-property property">components</span><span class="token operator">:</span><span class="token punctuation">{<!-- --></span>Count<span class="token punctuation">,</span>Person<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span></code></pre> <p>下面实现数据共享，我们让 Count 组件展示 Person 组件中总人数，Person 组件展示 Count 组件的求和数</p> <p>修改 Count 组件</p> <pre><code class="prism language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">color</span><span class="token punctuation">:</span> red</span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span>Person组件的总人数为{<!-- -->{personList.length}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token operator">...</span><span class="token operator">...</span><span class="token keyword">export</span><span class="token keyword">default</span><span class="token punctuation">{<!-- --></span><span class="token operator">...</span><span class="token operator">...</span><span class="token literal-property property">computed</span><span class="token operator">:</span><span class="token punctuation">{<!-- --></span><span class="token operator">...</span><span class="token operator">...</span><span class="token function">mapState</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'sum'</span><span class="token punctuation">,</span><span class="token string">'school'</span><span class="token punctuation">,</span><span class="token string">"subject"</span><span class="token punctuation">,</span><span class="token string">"personList"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">...</span><span class="token punctuation">}</span><span class="token operator">...</span><span class="token operator">...</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></code></pre> <p>修改 Person 组件</p> <pre><code class="prism language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">color</span><span class="token punctuation">:</span> red</span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span>Count组件求和为{<!-- -->{sum}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token operator">...</span><span class="token operator">...</span><span class="token keyword">export</span><span class="token keyword">default</span><span class="token punctuation">{<!-- --></span><span class="token operator">...</span><span class="token operator">...</span><span class="token literal-property property">computed</span><span class="token operator">:</span><span class="token punctuation">{<!-- --></span><span class="token operator">...</span><span class="token operator">...</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span><span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>sum<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></code></pre> <p>查看效果：<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220607/f59590800569f717e090583a9d8fc0d7.jpg" alt="vuex配置项、多组件数据共享案例详解"></p> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-81828.htm">做宠物粮食的上市公司 做宠物粮食的上市公司有哪些</a></p>
                                        <p>下一个：<a href="/news/article-82533.htm">猫咪的三针疫苗（猫咪的3针疫苗）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-35722.htm" title="领养宠物渠道（领养宠物渠道分析）">领养宠物渠道（领养宠物渠道分析）</a></li>
                        <li class="py-2"><a href="/news/article-67727.htm" title="网购安装接&#21333;&#24179;台哪个好（网购安装接&#21333;&#24179;台哪个好一点）">网购安装接&#21333;&#24179;台哪个好（网购安装接&#21333;&#24179;台哪个好一点）</a></li>
                        <li class="py-2"><a href="/news/article-38566.htm" title="想开个宠物店需要什么（想开个宠物店需要什么条件）">想开个宠物店需要什么（想开个宠物店需要什么条件）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-5-free-clash.htm" title="1月5日→19.6M/S|2025年最新免费节点Free V2ray Clash订阅链接地址">1月5日→19.6M/S|2025年最新免费节点Free V2ray Clash订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-41531.htm" title="动物疫苗的使用方法及注意事项视频讲解图片 动物疫苗的使用方法及注意事项视频讲解图片大全">动物疫苗的使用方法及注意事项视频讲解图片 动物疫苗的使用方法及注意事项视频讲解图片大全</a></li>
                        <li class="py-2"><a href="/news/article-75659.htm" title="宠物美容师有前景吗女生（宠物美容师好不好做）">宠物美容师有前景吗女生（宠物美容师好不好做）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-17-free-high-speed-nodes.htm" title="2月17日→19.5M/S|2025年最新免费节点Free V2ray Clash订阅链接地址">2月17日→19.5M/S|2025年最新免费节点Free V2ray Clash订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-17-clash-node-daily-updates.htm" title="1月17日→21M/S|2025年最新免费节点Free V2ray Clash订阅链接地址">1月17日→21M/S|2025年最新免费节点Free V2ray Clash订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-36239.htm" title="宠物粮品牌有哪些名字图片大全（宠物粮食品牌都有什么）">宠物粮品牌有哪些名字图片大全（宠物粮食品牌都有什么）</a></li>
                        <li class="py-2"><a href="/news/article-39577.htm" title="北京观赏宠物医院电话多少啊（北京观赏动物医院怎么样）">北京观赏宠物医院电话多少啊（北京观赏动物医院怎么样）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">87</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </div>
        <!--//w3l-faq-block-->
    <section class="w3l-footer-29-main w3l-copyright">
        <div class="container">
            <div class="bottom-copies">
                <p class="copy-footer-29 text-center">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                    <a href="/">Free V2ray Clash免费机场订阅节点官网</a> 版权所有 Powered by WordPress
                </p>
            </div>
        </div>
        <!-- move top -->
        <button onclick="topFunction()" id="movetop" title="Go to top">
            <span class="fa fa-angle-up"></span>
        </button>
        <script>
        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function() {
            scrollFunction()
        };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                document.getElementById("movetop").style.display = "block";
            } else {
                document.getElementById("movetop").style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }
        </script>
        <!-- /move top -->
    </section>
    <!-- Template JavaScript -->
    <script src="/assets/website/js/frontend/freev2rayclash/jquery-3.3.1.min.js"></script>
    <!-- script for testimonials -->
    <script>
    $(document).ready(function() {
        $('.owl-testimonial').owlCarousel({
            loop: true,
            margin: 0,
            nav: true,
            responsiveClass: true,
            autoplay: true,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                667: {
                    items: 1,
                    nav: true
                },
                1000: {
                    items: 1,
                    nav: true
                }
            }
        })
    })
    </script>
    <!-- //script for testimonials -->
    <script src="/assets/website/js/frontend/freev2rayclash/theme-change.js"></script>
    <!-- js for portfolio lightbox -->
    <!-- libhtbox -->
    <script src="/assets/website/js/frontend/freev2rayclash/lightbox-plus-jquery.min.js"></script>
    <!-- libhtbox -->
    <script src="/assets/website/js/frontend/freev2rayclash/owl.carousel.js"></script>
    <!-- script for banner slider-->
    <script>
    $(document).ready(function() {
        $('.owl-one').owlCarousel({
            loop: true,
            margin: 0,
            nav: false,
            responsiveClass: true,
            autoplay: true,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                667: {
                    items: 1,
                    nav: true
                },
                1000: {
                    items: 1,
                    nav: true
                }
            }
        })
    })
    </script>
    <!-- //script -->
    <!-- stats number counter-->
    <script src="/assets/website/js/frontend/freev2rayclash/jquery.waypoints.min.js"></script>
    <script src="/assets/website/js/frontend/freev2rayclash/jquery.countup.js"></script>
    <script>
    $('.counter').countUp();
    </script>
    <!-- //stats number counter -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })
    });
    </script>
    <!-- disable body scroll which navbar is in active -->
    <!--/MENU-JS-->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!--//MENU-JS-->
    <script src="/assets/website/js/frontend/freev2rayclash/bootstrap.min.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>